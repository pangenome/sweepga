name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run clippy
        run: cargo clippy -- -D warnings

      - name: Build
        run: cargo build --verbose --all-targets

      - name: Build tests (ensures fastga-rs is compiled)
        run: cargo test --no-run --verbose

      - name: Build release binaries (tests use cargo run --release)
        run: cargo build --release --verbose

      - name: Set FastGA binary paths (debug and release)
        run: |
          # Tests call 'cargo run --release', so we need BOTH debug and release FastGA binaries in PATH

          # Find debug FastGA
          FASTGA_DEBUG=$(find target/debug/build -name "FastGA" -type f | head -1)
          if [ -f "$FASTGA_DEBUG" ]; then
            FASTGA_DEBUG_DIR=$(dirname "$FASTGA_DEBUG")
            echo "Found debug FastGA in: $FASTGA_DEBUG_DIR"
            echo "$FASTGA_DEBUG_DIR" >> $GITHUB_PATH
          fi

          # Find release FastGA
          FASTGA_RELEASE=$(find target/release/build -name "FastGA" -type f | head -1)
          if [ -f "$FASTGA_RELEASE" ]; then
            FASTGA_RELEASE_DIR=$(dirname "$FASTGA_RELEASE")
            echo "Found release FastGA in: $FASTGA_RELEASE_DIR"
            echo "$FASTGA_RELEASE_DIR" >> $GITHUB_PATH
          else
            echo "ERROR: Release FastGA binary not found (tests need this for 'cargo run --release')!"
            exit 1
          fi

      - name: Run tests
        run: |
          # Set PATH to include FastGA binaries (needed for FastGA's system() calls)
          # MUST use absolute paths because FastGA runs from different working directories
          FASTGA_DEBUG=$(find target/debug/build -name "FastGA" -type f | head -1)
          FASTGA_RELEASE=$(find target/release/build -name "FastGA" -type f | head -1)
          FASTGA_DEBUG_ABS=$(cd $(dirname $FASTGA_DEBUG) && pwd)
          FASTGA_RELEASE_ABS=$(cd $(dirname $FASTGA_RELEASE) && pwd)
          export PATH="$FASTGA_DEBUG_ABS:$FASTGA_RELEASE_ABS:$PATH"
          echo "PATH for tests: $PATH"
          # Run tests sequentially on Linux to avoid FastGA race conditions
          if [ "$RUNNER_OS" == "Linux" ]; then
            cargo test --verbose -- --test-threads=1
          else
            cargo test --verbose
          fi

      - name: Check for forbidden files
        run: |
          # Check for files that should never be committed
          if git ls-tree -r HEAD --name-only | grep -E '\.(fa|fasta|paf|gdb|ktab|bps)$' | grep -v 'data/scerevisiae8.fa.gz' | grep -v 'data/B-3106.fa'; then
            echo "ERROR: Found forbidden data files in repository!"
            echo "Only data/scerevisiae8.fa.gz and data/B-3106.fa are allowed"
            exit 1
          fi

  build:
    name: Build Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust:
          - stable
          - beta
          - nightly
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Build
        run: cargo build --verbose

      - name: Build (all features)
        run: cargo build --verbose --all-features